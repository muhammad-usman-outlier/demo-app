# This is a basic workflow to help you get started with Actions

name: GitHub to GCP Auth

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
          
          # Configure Workload Identity Federation via a credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/82587591505/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider'
          service_account: 'cypress-test@local-passage-318821.iam.gserviceaccount.com'
          id_token_audience: 'https://cypress-2pp3iipi7a-uc.a.run.app'
          token_format: 'id_token'
          id_token_include_email: true
          
      - name: 'Echo'
        run: |
          echo ${{ steps.auth.outputs.id_token }}

#     # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
#       - name: 'Set up Cloud SDK'
#         uses: 'google-github-actions/setup-gcloud@v0'

#     # Now you can run gcloud commands authenticated as the impersonated service account.
#       - id: 'gcloud'
#         name: 'gcloud'
#         run: |-
#           gcloud secrets versions access "latest" --secret "my-secret"
